<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.EmpMapper">
    <!--根据id更新员工基本信息-->
    <!--<update id="updateById">
        UPDATE emp
        SET
            username = #{username},
            password = #{password},
            name = #{name},
            gender = #{gender},
            phone = #{phone},
            job = #{job},
            salary = #{salary},
            image = #{image},
            entry_date = #{entryDate},
            dept_id = #{deptId},
            update_time = #{updateTime}
        WHERE id = #{id}
    </update>-->
    <!--根据id动态更新员工基本信息-->
    <update id="updateById">
        update emp
        <set>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="job != null">job = #{job},</if>
            <if test="salary != null">salary = #{salary},</if>
            <if test="image != null and image != ''">image = #{image},</if>
            <if test="entryDate != null">entry_date = #{entryDate},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </set>
        where id = #{id}
    </update>

    <!--统计员工性别人数-->
    <select id="countEmpGenderData">
        select
            if(gender = 1,'男性员工','女性员工') name,
            count(*) value
        from emp
        group by gender
    </select>

    <!--统计员工职位人数-->
    <select id="countEmpJobData">
        select
            (case
                 when job = 1 then '班主任'
                 when job = 2 then '讲师'
                 when job = 3 then '学工主管'
                 when job = 4 then '教研主管'
                 when job = 5 then '咨询师'
                 else '其他'
                end) pos,
            count(*) num
        from emp
        group by job
        order by num;

    </select>
    <!--批量删除员工基本信息-->
    <delete id="deleteByIds">
        delete from emp where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <select id="list" resultType="org.example.pojo.Emp">
        select e.* , d.name deptName
        from emp e left join dept d on e.dept_id = d.id
        <where>
          <if test="name != null and name != ''">
            e.name like concat('%',#{name},'%')
          </if>
          <if test="gender != null">
              and e.gender = #{gender}
          </if>
          <if test="begin != null and end != null">
              and e.entry_date between #{begin} and #{end}
          </if>
        </where>order by e.update_time desc
    </select>

    <!--定义ResultMap
    <resultMap id="empResultMap" type="org.example.pojo.Emp">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="gender" column="gender"/>
        <result property="phone" column="phone"/>
        <result property="job" column="job"/>
        <result property="salary" column="salary"/>
        <result property="image" column="image"/>
        <result property="entryDate" column="entry_date"/>
        <result property="deptId" column="dept_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        &lt;!&ndash;封装工作经历信息&ndash;&gt;
        <collection property="exprList" ofType="org.example.pojo.EmpExpr">
            <id property="id" column="ee_id"/>
            <result property="empId" column="ee_empid"/>
            <result property="begin" column="ee_begin"/>
            <result property="end" column="ee_end"/>
            <result property="company" column="ee_company"/>
            <result property="job" column="ee_job"/>
        </collection>
    </resultMap>-->

    <!--自定义结果集ResultMap-->
    <resultMap id="empResultMap" type="org.example.pojo.Emp">
        <id column="id" property="id" />
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="name" property="name" />
        <result column="gender" property="gender" />
        <result column="phone" property="phone" />
        <result column="job" property="job" />
        <result column="salary" property="salary" />
        <result column="image" property="image" />
        <result column="entry_date" property="entryDate" />
        <result column="dept_id" property="deptId" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />

        <!--封装exprList-->
        <collection property="exprList" ofType="org.example.pojo.EmpExpr">
            <id column="ee_id" property="id"/>
            <result column="ee_company" property="company"/>
            <result column="ee_job" property="job"/>
            <result column="ee_begin" property="begin"/>
            <result column="ee_end" property="end"/>
            <result column="ee_empid" property="empId"/>
        </collection>
    </resultMap>

    <!--根据id查询员工信息及工作经历信息-->
    <select id="getById" resultMap="empResultMap">
        select e.*,
               ee.id ee_id,
               ee.emp_id ee_empid,
               ee.begin ee_begin,
               ee.end ee_end,
               ee.company ee_company,
               ee.job ee_job
        from emp e left outer join emp_expr ee on e.id = ee.emp_id
        where e.id = #{id}
    </select>
</mapper>